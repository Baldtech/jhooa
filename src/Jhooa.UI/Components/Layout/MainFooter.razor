@using System.ComponentModel.DataAnnotations
@using Jhooa.UI.Features.ContactForm.Models
@using Jhooa.UI.Resources
@using Microsoft.Extensions.Localization

@inject ApplicationDbContext DbContext
@inject IStringLocalizer<Shared> Loc
@inject NavigationManager NavigationManager

<div class="h-8 md:h-24"></div>

<!-- Contact Section -->
<footer class="bg-jhooa-teal-200 text-white py-8">
    <div class="max-w-6xl mx-auto px-4">
        <!-- 2 columns on desktop, stack on mobile -->
        <div class="md:grid md:grid-cols-3 md:gap-8">

            <!-- LEFT COLUMN: Title, Icons, Email -->

            <div class="mb-8 md:mb-0">
                <!-- Heading -->
                <h2 class="text-2xl font-semibold mb-4">@Loc["FooterContactUs"]</h2>

                <!-- Social Icons (stacked on mobile; row on desktop) -->
                <div class="flex flex-col space-y-2 mb-6 md:space-y-2">
                    <!-- Replace # with your actual links and placeholders with real icons -->
                    <a href="#" class="flex items-center space-x-2">
                        <!-- Facebook icon placeholder -->
                        <img src="images/fb.svg" alt="Facebook icon" class="w-6 h-6"/>
                        <span>@@jhooa</span>
                    </a>
                    <a href="#" class="flex items-center space-x-2">
                        <!-- TikTok icon placeholder -->
                        <img src="images/fb.svg" alt="Facebook icon" class="w-6 h-6"/>
                        <span>@@jhooa</span>
                    </a>
                    <a href="#" class="flex items-center space-x-2">
                        <!-- Instagram icon placeholder -->
                        <img src="images/instagram.svg" alt="Facebook icon" class="w-6 h-6"/>
                        <span>@@jhooa</span>
                    </a>
                </div>

                <!-- Email -->
                <div class="flex items-center space-x-2 mb-6">
                    <!-- Mail icon placeholder -->
                    <img src="images/mail.svg" alt="Facebook icon" class="w-6 h-6"/>
                    <span>hello@jhooa.com</span>
                </div>
            </div>

            <div class="col-span-2">
                <!-- RIGHT COLUMN: Form -->
                <EditForm Model="Model" OnValidSubmit="OnValidSubmitAsync" FormName="ContactForm"
                          class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <!-- First row: Name/Email input -->
                    <div class="">
                        <InputText @bind-Value="Model!.Email" placeholder="@Loc["ContactFormEmail"]"
                                   type="email"
                                   class="w-full border border-white bg-transparent p-2 placeholder-white focus:outline-none"
                        />
                        <ValidationMessage For="() => Model!.Email" class="text-danger"/>

                        <div class="h-4"></div>

                        <InputText @bind-Value="Model!.Subject" placeholder="@Loc["ContactFormSubject"]"
                                   type="text"
                                   class="w-full border border-white bg-transparent p-2 placeholder-white focus:outline-none"
                        />
                        <ValidationMessage For="() => Model!.Subject" class="text-danger"/>
                    </div>

                    <!-- Third row: Message textarea spanning two columns -->
                    <div class="">
                        <InputTextArea @bind-Value="Model!.Content" placeholder="@Loc["ContactFormContent"]"
                                       rows="4"
                                       class="w-full border border-white bg-transparent p-2 placeholder-white focus:outline-none"
                        />

                        <div class="h-4"></div>
                        <!-- Fourth row: Send button (aligned to the right by default on desktop) -->
                        <div class="flex justify-end">
                            <button
                                type="submit"
                                class="border border-white px-4 py-2 hover:bg-white hover:text-jhooa-teal-200 transition-colors"
                            >
                                @Loc["ContactFormSubmit"]
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>


        </div>
    </div>
</footer>


@* <footer class="w-full bg-jhooa-teal-200 text-white py-8"> *@
@*     <div class="max-w-screen-xl mx-auto grid grid-cols-4 "> *@
@*         <div> *@
@*             <h3>@Loc["FooterContactUs"]</h3> *@
@*             <ul> *@
@*                 <li>Email</li> *@
@*                 <li>Facebook</li> *@
@*                 <li>TikTok</li> *@
@*                 <li>Instagram</li> *@
@*             </ul> *@
@*         </div> *@
@*         <div class="col-span-3"> *@
@*             <EditForm Model="Model" OnValidSubmit="OnValidSubmitAsync" FormName="ContactForm" class="space-y-6"> *@
@*                 <DataAnnotationsValidator></DataAnnotationsValidator> *@
@*                 <div class="grid grid-cols-2 gap-4"> *@
@*                     <div> *@
@*                         <InputText @bind-Value="Model!.Email" placeholder="@Loc["ContactFormEmail"]" class="mt-1 block w-full border-2 border-white bg-transparent p-3 focus:outline-none mb-4 placeholder-white"/> *@
@*                         <ValidationMessage For="() => Model!.Email" class="text-danger"/> *@
@*                         <InputText @bind-Value="Model!.Subject" placeholder="@Loc["ContactFormSubject"]" class="mt-1 block w-full border-2 border-white bg-transparent p-3 focus:outline-none placeholder-white"/> *@
@*                         <ValidationMessage For="() => Model!.Subject" class="text-danger"/> *@
@* *@
@*                     </div> *@
@*                     <div> *@
@*                         <InputTextArea @bind-Value="Model!.Content" placeholder="@Loc["ContactFormContent"]" class="mt-1 block w-full border-2 border-white bg-transparent p-3 focus:outline-none placeholder-white mb-4 min-h-[7.5rem]"/> *@
@*                         <ValidationMessage For="() => Model!.Content" class="text-danger"/> *@
@* *@
@*                         <button type="submit" class="border-2 border-white p-3 float-right">@Loc["ContactFormSubmit"]</button> *@
@*                     </div> *@
@*                 </div> *@
@*             </EditForm> *@
@*         </div> *@
@*     </div> *@
@* *@
@* </footer> *@

@code {
    [SupplyParameterFromForm] private ContactForm? Model { get; set; }

    protected override void OnInitialized() => Model ??= new ContactForm();

    private async Task OnValidSubmitAsync()
    {
        if (Model is not null)
        {
            var submission = new ContactFormSubmission()
            {
                Content = Model.Content!,
                Subject = Model.Subject!,
                Sender = Model.Email!
            };

            await DbContext.ContactFormSubmissions.AddAsync(submission);
            await DbContext.SaveChangesAsync();

            Model = new ContactForm();

            NavigationManager.NavigateTo($"/ContactForm/Confirmation");
        }
    }

    public class ContactForm
    {
        [Required] [EmailAddress] public string? Email { get; set; }

        [Required]
        [MinLength(ContactFormSubmission.SubjectMinLength)]
        [MaxLength(ContactFormSubmission.SubjectMaxLength)]
        public string? Subject { get; set; }

        [Required]
        [MinLength(ContactFormSubmission.ContentMinLength)]
        [MaxLength(ContactFormSubmission.ContentMaxLength)]
        public string? Content { get; set; }
    }

}