@using Jhooa.UI.Features.Identity
@using Jhooa.UI.Features.Identity.Models
@using Jhooa.UI.Features.Localization.Components
@using Jhooa.UI.Resources
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<Shared> Loc
@inject NavigationManager NavigationManager
@inject IdentityUserAccessor UserAccessor

<header class="w-full bg-jhooa-teal-900">
    <div class="max-w-screen-xl mx-auto px-4 py-4 flex items-center text-white">
        <div class="basis-64 flex-none items-center space-x-2">
            <NavLink href="/" class="text-sm hover:underline">
                <img src="images/chevron-left.svg" alt="back" class="h-5 w-5 inline mr-2"/> @Loc["BackToHome"]
            </NavLink>
        </div>

        <div class="basis-64 grow flex justify-center">
            <img src="images/logo_no_tagline.svg" alt="Jhooa" class="h-16 m-auto hidden md:inline-block"/>
        </div>

        <div class="w-80 items-center space-x-4">
            <div class="relative inline-block md:float-end">
                <CultureSelector/>
            </div>
            <AuthorizeView>
                <Authorized>
                    <form action="Account/Logout" method="post"
                          class="px-3 block text-right md:inline md:float-end">
                        <AntiforgeryToken/>
                        <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
                        <button type="submit"
                                class="rounded-md px-6 py-3 text-sm hidden md:inline-block md:float-end bg-[#BE755F]">
                            <img src="images/login.svg" class="h-4 w-4 rounded-full inline-block mr-2" alt="user"/>
                            @Loc["Logout"]
                        </button>
                    </form>

                </Authorized>
                <NotAuthorized>
                    <a href="Account/Login" type="button"
                       class="rounded-md px-6 py-3 text-sm hidden md:inline-block md:float-end bg-[#BE755F] ">
                        <img src="images/user.svg" class="h-4 w-4 rounded-full inline-block mr-2" alt="user"/>
                        @Loc["Login"]
                    </a>
                </NotAuthorized>

            </AuthorizeView>
            @* <AuthorizeView> *@
            @*     <Authorized> *@
            @*         <form action="Account/Logout" method="post" *@
            @*               class="px-3 block text-right md:inline md:float-end"> *@
            @*             <AntiforgeryToken/> *@
            @*             <input type="hidden" name="ReturnUrl" value="@_currentUrl"/> *@
            @*             <button type="submit" *@
            @*                     class="lowercase border border-white rounded-md px-4 py-2 text-sm md:float-end"> *@
            @*                 <img src="images/login.svg" class="h-4 w-4 rounded-full inline-block mr-2" alt="user"/> *@
            @*                 @Loc["Logout"] *@
            @*             </button> *@
            @*         </form> *@
            @* *@
            @*     </Authorized> *@
            @*     <NotAuthorized> *@
            @*         <a href="Account/Login" type="button" *@
            @*            class="border border-white rounded-md px-4 py-2 text-sm "> *@
            @*             <img src="images/user.svg" class="h-4 w-4 rounded-full inline-block mr-2" alt="user"/> *@
            @*             @Loc["Login"] *@
            @*         </a> *@
            @*     </NotAuthorized> *@
            @* *@
            @* </AuthorizeView> *@
            @* *@
            @* <div class="relative"> *@
            @*     <CultureSelector /> *@
            @* </div> *@
        </div>
    </div>
</header>

@code {
    private string? _currentUrl;
    private ApplicationUser? _user;
    [CascadingParameter] private HttpContext HttpContext { get; set; } = null!;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }
    
    protected override async Task OnInitializedAsync()
    {
        if (HttpContext.User.Identity?.IsAuthenticated == true)
        {
            _user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        }
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}