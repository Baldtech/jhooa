@using Jhooa.UI.Features.Videos.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Resources.Videos> Loc
@inject ApplicationDbContext DbContext

<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
    <div>
        <label for="theme" class="block text-jhooa-teal-200 mb-2">@Loc["Theme"]</label>
        <InputSelect id="theme" @bind-Value="_selectedTheme"
                     class="w-full border-[3px] border-jhooa-beige-100  px-[25px] py-[10px] text-jhooa-beige-100 focus:outline-none focus:ring-0  focus:border-jhooa-beige-100">
            <option
                @onclick="() => ApplySelectedThemeAsync(null)">@Loc["ChooseTheme"]</option>
            @foreach (var theme in _themes)
            {
                <option
                    @onclick='(() => ApplySelectedThemeAsync(theme.Id))'>@(CultureInfo.CurrentCulture.Name == "en-GB" ? theme.NameEn : theme.NameFr)</option>
            }
        </InputSelect>

    </div>
    <div>
        <label for="month" class="block text-jhooa-teal-200 mb-2">@Loc["Month"]</label>
        <InputSelect id="month" @bind-Value="_selectedMonth"
                     class="w-full border-[3px] border-jhooa-beige-100   px-[25px] py-[10px] text-jhooa-beige-100 focus:outline-none focus:ring-0  focus:border-jhooa-beige-100">
            <option
                @onclick="() => ApplySelectedMonthAsync(null)">@Loc["ChooseMonth"]</option>
            @foreach (var month in _months)
            {
                <option
                    @onclick='(() => ApplySelectedMonthAsync(month))'>@month.Name</option>
            }
        </InputSelect>

    </div>
    <div>
        <label for="year" class="block text-jhooa-teal-200 mb-2">@Loc["Years"]</label>
        <InputSelect id="year" @bind-Value="_selectedYear"
                     class="w-full border-[3px] border-jhooa-beige-100   px-[25px] py-[10px] text-jhooa-beige-100 focus:outline-none focus:ring-0  focus:border-jhooa-beige-100">
            <option
                @onclick="() => ApplySelectedYearAsync(null)">@Loc["ChooseYear"]</option>
            @foreach (var year in _years)
            {
                <option
                    @onclick='(() => ApplySelectedYearAsync(year))'>@year</option>
            }
        </InputSelect>

    </div>
</div>


@code

{
    [Parameter] public EventCallback<Guid?> SelectThemeCallback { get; set; }
    private Guid? _selectedTheme;

    [Parameter] public EventCallback<int?> SelectMonthCallback { get; set; }
    private string? _selectedMonth;

    [Parameter] public EventCallback<int?> SelectYearCallback { get; set; }
    private int? _selectedYear;

    private List<VideoTheme> _themes = [];
    private List<MonthModel> _months = [];
    private List<int> _years = [];

    protected override async Task OnInitializedAsync()
    {
        _themes = await DbContext.VideoThemes.Take(21).ToListAsync();
        _years = Enumerable.Range(2024, 3).ToList();
        _months = Enumerable.Range(1, 12).Select(x => new MonthModel()
        {
            Number = x,
            Name = new DateTime(2024, x, 1).ToString("MMMM")
        }).ToList();
    }

    private void ApplySelectedThemeAsync(Guid? themeId)
    {
        SelectThemeCallback.InvokeAsync(themeId);
    }

    private void ApplySelectedMonthAsync(MonthModel? month)
    {
        SelectMonthCallback.InvokeAsync(month?.Number);
    }

    private void ApplySelectedYearAsync(int? year)
    {
        SelectYearCallback.InvokeAsync(year);
    }

    sealed class MonthModel
    {
        public required int Number { get; init; }
        public required string Name { get; init; }
    }
}