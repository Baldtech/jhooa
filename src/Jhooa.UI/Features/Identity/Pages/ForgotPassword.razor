@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Jhooa.UI.Features.Identity.Models
@using Microsoft.Extensions.Localization
@using Jhooa.UI.Features.Identity.Components

@inject IStringLocalizer<Resources.Identity> Loc
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@layout LoginLayout

<PageTitle>@Loc["ForgotPassword"]</PageTitle>

<section class="max-w-screen-xl mx-auto grid grid-cols-2 gap-4 text-white">
    <div class="flex flex-col items-center justify-center text-center text-white py-8 md:py-0 border-b lg:border-b-0 lg:border-r border-white">
        <h2 class="text-3xl md:text-3xl font-semibold mb-6 font-monetaRegular">
            @Loc["CreateAccount"]
        </h2>
        <a href="/Account/Register"
           class="border border-white text-white px-6 py-2 text-sm font-medium bg-gray-400/50 font-amsiSemiBold"
        >
            @Loc["CreateAccount"]
        </a>
    </div>
    <div
        class="flex flex-col items-center justify-center text-white py-8 md:py-0">
        <h2 class="text-3xl md:text-3xl font-semibold mb-6  font-monetaRegular">
            @Loc["ForgotPassword"]
        </h2>
        <EditForm Model="Input" method="post" OnValidSubmit="OnValidSubmitAsync" FormName="forgot-password" class="space-y-6">
            <DataAnnotationsValidator/>

            <JhooaInputText @bind-Value="Input.Email" DisplayName="@Loc["EmailAddress"]" ValidationFor="@(() => Input.Email)" />

            <div class="flex justify-end">
                <button
                    type="submit"
                    class="border border-white text-white px-6 py-2 text-sm font-medium bg-gray-400 bg-gray-400/50 font-amsiSemiBold"
                >
                    @Loc["ResetPassword"]
                </button>
            </div>
            
        </EditForm>
    </div>
</section>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !await UserManager.IsEmailConfirmedAsync(user))
        {
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }
        
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Resources.Identity))] 
        [EmailAddress(ErrorMessageResourceName = "EmailInvalid", ErrorMessageResourceType = typeof(Resources.Identity))]
        public string Email { get; set; } = "";
    }
}
