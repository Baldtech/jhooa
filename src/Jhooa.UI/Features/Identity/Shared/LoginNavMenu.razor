@using Jhooa.UI.Resources
@using Microsoft.Extensions.Localization
@using Jhooa.UI.Features.Localization.Components

@implements IDisposable

@inject IStringLocalizer<Shared> Loc
@inject NavigationManager NavigationManager

<header class="w-full bg-black bg-opacity-50">
    <div class="max-w-screen-xl mx-auto px-4 py-2 flex items-center text-white pt-6">
        <div class="flex items-center space-x-2">
            <NavLink href="/" class="focus:outline-none mr-2 flex items-center">
                <img src="images/chevron-left.svg" alt="back" class="h-5 w-5"/>

            </NavLink>
            <NavLink href="/" class="text-sm hover:underline hidden md:inline-block">
                @Loc["BackToHome"]
            </NavLink>
        </div>

        <div class="flex-1 flex justify-center">
            <h1 class="text-2xl font-semibold tracking-wide">
                <img src="images/logo_no_tagline.svg" alt="Jhooa" class="h-16"/>
            </h1>
        </div>

        <div class="flex items-center space-x-4">
            <AuthorizeView>
                <Authorized>
                    <form action="Account/Logout" method="post"
                          class="px-3 block text-right md:inline md:float-end">
                        <AntiforgeryToken/>
                        <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
                        <button type="submit"
                                class="lowercase border border-white rounded-md px-4 py-2 text-sm hidden md:inline-block md:float-end">
                            <img src="images/login.svg" class="h-4 w-4 rounded-full inline-block mr-2" alt="user"/>
                            @Loc["Logout"]
                        </button>
                    </form>

                </Authorized>

            </AuthorizeView>

            <div class="relative">
                <CultureSelector />
            </div>
        </div>
    </div>
</header>

<AuthorizeView>
    <Authorized>

        <ManageNavMenu/>

    </Authorized>
</AuthorizeView>

@code {
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}