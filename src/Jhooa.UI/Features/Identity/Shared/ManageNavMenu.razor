@using Microsoft.Extensions.Localization
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Resources.Identity> Loc

<nav class=" flex items-center justify-center bg-black py-20">
    <!-- Menu -->
    <div class="inline-flex">
        <!-- Active / highlighted button -->
        <a
            href="/Account/Manage"
            class="
        px-6 py-2 
        text-white 
        @(_currentRoot.EndsWith("Account/Manage") ? "bg-[#3DA2AA]" : "bg-[#004F53]")
        border border-white
        rounded-l-full
      "
        >
            @Loc["MyAccount"]
        </a>

        <!-- Middle button -->
        <a
            href="/Account/Manage/Dreams"
            class="
        px-6 py-2
        text-white 
        @(_currentRoot.Contains("Dreams") ? "bg-[#3DA2AA]" : "bg-[#004F53]")
        border-t border-b border-white
      "
        >
            @Loc["MyDreams"]
        </a>

        <!-- Last button -->
        <a
            href="/Account/Manage/Subscription"
            class="
        px-6 py-2 
        text-white 
        @(_currentRoot.Contains("Subscription") ? "bg-[#3DA2AA]" : "bg-[#004F53]")
        border border-white
        rounded-r-full
      "
        >
            @Loc["MySubscription"]
        </a>
    </div>
</nav>


@code {
    private string? _currentUrl;
    private string _currentRoot = string.Empty;
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        _currentRoot = NavigationManager.Uri.Replace(NavigationManager.BaseUri, "");
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
