@using Jhooa.UI.Features.Dreams.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<Resources.Dreams> Loc
@inject ApplicationDbContext DbContext
@rendermode InteractiveServer

<PaginationComponent TItem="Dream" Items="_dreams" DefaultPageSize="15">
    <ChildContentHeader>
        <tr>
            <th>@Loc["Type"]</th>
            <th>@Loc["Title"]</th>
        </tr>
    </ChildContentHeader>
    <ChildContentRow Context="dream">
        <tr class="even:bg-jhooa-table-even odd:bg-jhooa-table-odd">
            <td>@Loc[dream.Type.ToString()]</td>
            <td>@dream.Title</td>
        </tr>
    </ChildContentRow>
</PaginationComponent>

@code {

    [Parameter] public DreamTypes? SelectedDreamType { get; set; }

    private List<Dream> _dreams = [];
    
    protected override async Task OnInitializedAsync()
    {
        _dreams = await DbContext.Dreams.ToListAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (SelectedDreamType is null)
        {
            _dreams = await DbContext.Dreams.ToListAsync();
        }
        else
        {
            _dreams = await DbContext.Dreams.Where(d => d.Type == SelectedDreamType).ToListAsync();
        }
    }

}