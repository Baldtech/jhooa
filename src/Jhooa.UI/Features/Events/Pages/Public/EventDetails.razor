@page "/Events/{id:guid}"
@using Jhooa.UI.Features.Events.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@using Jhooa.UI.Features.Events.Components
@using Jhooa.UI.Services

@inject IStringLocalizer<Resources.Events> Loc
@inject ApplicationDbContext DbContext
@inject IBlobService BlobService

@if (_ev is not null)
{
    <PageTitle>@_ev.Title</PageTitle>
}

<JhooaStatusMessage/>

@if (_ev is not null)
{
    <section class="max-w-screen-xl mx-auto px-4 py-8">
        <div class="md:w-[140rem]">
            <div class="mb-6">
                <a href="/Events" class="inline-flex  text-gray-500  space-x-2">
                    <!-- Left arrow icon -->
                    <svg
                        class="h-4 w-4"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        viewBox="0 0 24 24">
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M15 19l-7-7 7-7"/>
                    </svg>
                    <span>@Loc["BackToEvents"]</span>
                </a>
            </div>
        </div>
        

        <p class="text-jhooa-brick-100 font-medium mb-2">@_ev.StartDate.ToString("d")</p>
        <h1 class="text-3xl font-semibold text-teal-900 mb-4">@_ev.Title</h1>

        <div class="space-y-4 leading-relaxed">
            <p>@_ev.Description</p>
        </div>

        <Registration EventId="@_ev.Id" IsPast="@_ev.IsPast"/>

        @if (_pictures is not null && _pictures.Count > 1)
        {
            <h2 class="text-xl font-semibold text-teal-900 mt-8 mb-4">@Loc["Pictures"]</h2>

            <div class="grid grid-cols-4 gap-4">
                @foreach (var picture in _pictures)
                {
                    <div class=" w-full h-60 overflow-hidden">
                        <img src="@picture" alt="Image 1" class=" w-full h-full object-cover">
                    </div>
                }
            </div>
        }
    </section>
}



@code {
    [Parameter] public Guid Id { get; set; }

    private Event? _ev;
    private List<string>? _pictures;

    protected override async Task OnParametersSetAsync()
    {
        _ev = await DbContext.Events.FirstAsync(e => e.Id == Id);

        var blobService = BlobService.GetBlobService("events");
        _pictures = await blobService.GetAllBlobs($"{_ev.Id}/");
    }

}