@attribute [StreamRendering]
@using Jhooa.UI.Features.Events.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@inject IJSRuntime JS

@inject IStringLocalizer<Resources.Events> Loc
@inject ApplicationDbContext DbContext


<section class="mb-8 md:mb-20 w-full ">

    <div class="max-w-screen-xl mx-auto px-8 text-white">

        @if (_events is not null && _events.Count > 0)
        {
            <h1 class="text-butler text-3xl text-jhooa-peach-100 mb-6 pt-8">@Loc["PastEvents"]</h1>
        }

        <div class="flex flex-wrap gap-y-4">
            @if (_events is not null && _events.Count > 0)
            {
                @foreach (var ev in _events.OrderByDescending(ev => ev.StartDate))
                {
                    <div class="w-[90%] md:w-1/3 px-4">
                        <EventCard Event="ev"/>
                    </div>
                }
            }
            else if (_events is not null && _events.Count == 0)
            {
                @Loc["NoPastEvents"]
            }
            else
            {
                <p>@Loc["Loading"]</p>
            }
        </div>
    </div>

</section>


@code {

    private List<EventListViewModel>? _events;

    protected override async Task OnInitializedAsync()
    {
        _events ??= await DbContext.Events
            .Where(ev => ev.EndDate < DateTimeOffset.Now && ev.IsPublished)
            .Select(ev => new EventListViewModel()
            {
                Id = ev.Id,
                Title = CultureInfo.CurrentCulture.Name == "en-GB" ? ev.TitleEn : ev.Title,
                StartDate = ev.StartDate,
                EndDate = ev.EndDate,
                ImageUrl = ev.ImageUrl,
                IsVisible = false
            }).ToListAsync();
    }

}