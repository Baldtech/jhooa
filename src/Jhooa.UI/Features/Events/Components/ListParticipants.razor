@using Jhooa.UI.Features.Identity.Models
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization

@inject ApplicationDbContext DbContext
@inject IStringLocalizer<Jhooa.UI.Resources.Shared> Loc
@rendermode InteractiveServer

<PaginationComponent TItem="ApplicationUser" Items="_users" DefaultPageSize="15">
    <ChildContentHeader>
        <tr>
            <th>@Loc["EmailAddress"]</th>
            <th>@Loc["FirstName"]</th>
            <th>@Loc["LastName"]</th>
            <th>@Loc["Type"]</th>
            <th>@Loc["Actions"]</th>
        </tr>
    </ChildContentHeader>
    <ChildContentRow Context="user">
        <tr class="even:bg-jhooa-table-even odd:bg-jhooa-table-odd">
            <td>@user.Email</td>
            <td>@user.FirstName</td>
            <td>@user.LastName</td>
            <td>@user.SubType</td>
            <td>
                <a class="px-6 py-1 text-sm bg-jhooa-peach-100 rounded-3xl font-amsiProLight" href="/Admin/Users/@user.Id">@Loc["Details"]</a>
            </td>
        </tr>
    </ChildContentRow>
</PaginationComponent>

@code {
    private List<ApplicationUser> _users = [];
    [Parameter] public EventCallback<int?> NbParticipantsCallback { get; set; }
    [Parameter] public Guid Id { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var participants = await DbContext.Registrations.Where(r => r.EventId == Id).Select(r => r.UserId).ToListAsync();
        
        _users = await DbContext.Users.Where(u => u.ActivatedAt != null && participants.Contains(u.Id)).ToListAsync();
        await NbParticipantsCallback.InvokeAsync(_users.Count);
    }

}