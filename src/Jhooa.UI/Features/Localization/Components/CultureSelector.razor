@using Microsoft.Extensions.Localization
@inject NavigationManager Navigation
@inject IStringLocalizer<CultureSelector> Loc

<InputSelect id="language" @bind-Value="selectedCulture" class="text-black">
    <option value="fr-FR" @onclick='(() => ApplySelectedCultureAsync(new CultureInfo("fr-FR")))'>FR</option>
    <option value="en-GB" @onclick='(() => ApplySelectedCultureAsync(new CultureInfo("en-GB")))'>EN</option>
</InputSelect>


@code
{
    private CultureInfo selectedCulture = CultureInfo.CurrentCulture;
    private string test = string.Empty;
    
    protected override void OnInitialized()
    {
        test = selectedCulture.Name;
    }
    
    
    private Task ApplySelectedCultureAsync(CultureInfo culture)
    {
        
        if (Equals(CultureInfo.CurrentCulture, culture))
            return Task.CompletedTask;

        var uri = new Uri(Navigation.Uri)
            .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        var cultureEscaped = Uri.EscapeDataString(culture.Name);
        var uriEscaped = Uri.EscapeDataString(uri);

        Navigation.NavigateTo(
            $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
            forceLoad: true);

        return Task.CompletedTask;
    }
}